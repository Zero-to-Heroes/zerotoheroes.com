# Properties file which configures the operation of the JDK 
# logging facility.

# The system will look for this config file, first using 
# a System property specified at startup: 
# 
# >java -Djava.util.logging.config.file=myLoggingConfigFilePath 
# 
# If this property is not specified, then the config file is 
# retrieved from its default location at: 
# 
# JDK_HOME/jre/lib/logging.properties

# Global logging properties. 
# ------------------------------------------ 
# The set of handlers to be loaded upon startup. 
# Comma-separated list of class names. 
# (? LogManager docs say no comma here, but JDK example has comma.) 
handlers=java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# Default global logging level. 
# Loggers and Handlers may override this level 
.level=INFO

# Loggers 
# ------------------------------------------ 
# Loggers are usually attached to packages. 
# Here, the level for each package is specified. 
# The global level is used by default, so levels 
# specified here simply act as an override. 
com.coach.level=ALL 
com.coach.core.security.level=WARNING
com.coach.core.prerender.level=WARNING

# Other loggers
net.spy.level=WARNING
org.apache.level=WARNING
org.apache.http.level=WARNING
com.amazonaws.level=WARNING
# Spring
org.springframework.level=WARNING
# DB
org.springframework.data.mongodb.level=WARNING
com.mongodb.level=WARNING
# HTTP exchanges, cf http://hc.apache.org/httpcomponents-client-4.3.x/logging.html
#org.apache.http.wire.level=ALL 
#org.apache.http.client.level=ALL 
#org.apache.http.impl.client.level=ALL 
# Slack notifications
com.ullink.slack.level=WARNING
org.jsoup.level=WARNING
#Other plugin
com.zerotoheroes.hsgameparser.level=WARNING

#Format
java.util.logging.SimpleFormatter.format=%1$tY-%1$tm-%1$td %1$tH:%1$tM:%1$tS %4$-8s --- %2$-100s : %5$s%6$s%n

# Handlers 
# -----------------------------------------

# --- ConsoleHandler --- 
# Override of global logging level 
java.util.logging.ConsoleHandler.level=FINE 
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter

# --- FileHandler --- 
java.util.logging.FileHandler.pattern = test.log
java.util.logging.FileHandler.limit = 50000
java.util.logging.FileHandler.count = 1
java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter